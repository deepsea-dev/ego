{"version":3,"sources":["colours.ts","components/Card.tsx","components/Emph.tsx","components/Header.tsx","components/Review.tsx","components/SubmitButton.tsx","images/Ego.webp","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Current_Line","Foreground","Card","styled","div","Emph","span","Header","HeaderBox","HeaderBar","Title","h1","Review","imageUrl","reviewContent","ReviewContainer","FoodImage","img","FoodCard","ReviewCard","src","SubmitButton","setImageUrl","inputRef","useRef","StyledButton","button","ref","type","hidden","onChange","event","target","files","URL","createObjectURL","onClick","current","click","App","useState","Wrapper","Body","EgoImage","Ego","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNACaA,EAAe,UAEfC,EAAa,UCAbC,EAAOC,IAAOC,IAAV,6KAEIH,EDDE,WEDVI,EAAOF,IAAOG,KAAV,wEACNN,EFKW,W,OGJTO,EAAS,kBACpB,cAACC,EAAD,UACE,cAACC,EAAD,UACE,cAACC,EAAD,6BAKAA,EAAQP,IAAOQ,GAAV,oGACAV,GAMLO,EAAYL,IAAOC,IAAV,+EAKTK,EAAYN,IAAOC,IAAV,4FAEOJ,GClBTY,EAAgC,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,cACjDC,EAAkBZ,IAAOC,IAAV,iNAYfY,EAAYb,IAAOc,IAAV,mEAKTC,EAAWf,YAAOD,EAAPC,CAAH,6GAQRgB,EAAahB,YAAOD,EAAPC,CAAH,6GAQhB,OACE,eAACY,EAAD,WACE,cAACG,EAAD,UACE,cAACF,EAAD,CAAWI,IAAKP,MAElB,cAACM,EAAD,UACGL,QCzCIO,EAA4C,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACnDC,EAAWC,iBAAyB,MAEpCC,EAAetB,IAAOuB,OAAV,mSAKIzB,EAEJD,GAkBlB,OACE,qCACE,uBAAO2B,IAAKJ,EAAUK,KAAK,OAAOC,QAAM,EAACC,SARvB,SAACC,GACjBA,EAAMC,OAAOC,OAASF,EAAMC,OAAOC,MAAM,IAC3CX,EAAYY,IAAIC,gBAAgBJ,EAAMC,OAAOC,MAAM,QAOnD,cAACR,EAAD,CAAcW,QAAS,WAdrBb,EAASc,SACXd,EAASc,QAAQC,SAajB,sCCvCS,MAA0B,iCCgC1BC,MAtBf,WACE,MAAgCC,mBAAwB,MAAxD,mBAAO3B,EAAP,KAAiBS,EAAjB,KAEA,OACA,qCACE,cAAC,EAAD,IACA,eAACmB,EAAD,WACE,eAACC,EAAD,WACE,eAACxC,EAAD,qCACyB,cAACG,EAAD,kCADzB,6DACmH,cAACA,EAAD,0BADnH,8BACsK,cAACA,EAAD,oBADtK,KAC0L,cAACA,EAAD,oBAD1L,KAC8M,cAACA,EAAD,wCAD9M,QAGEQ,GAAY,cAACX,EAAD,UACZ,cAAC,EAAD,CAAcoB,YAAaA,MAE5BT,GAAY,cAAC,EAAD,CAAQA,SAAUA,EAAUC,cAAe,8DAE1D,cAAC6B,EAAD,CAAUvB,IAAKwB,EAAKC,IAAK,qBAQzBJ,EAAUtC,IAAOC,IAAV,qKASPsC,EAAOvC,IAAOC,IAAV,oKASJuC,EAAWxC,IAAOc,IAAV,sWCtCC6B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1cd7d7bb.chunk.js","sourcesContent":["export const Background = '#282a36'\nexport const Current_Line = '#44475a'\nexport const Selection = '#44475a'\nexport const Foreground = '#f8f8f2'\nexport const Comment = '#6272a4'\nexport const Cyan = '#8be9fd'\nexport const Green = '#50fa7b'\nexport const Orange = '#ffb86c'\nexport const Pink = '#ff79c6'\nexport const Purple = '#bd93f9'\nexport const Red = '#ff5555'\nexport const Yellow = '#f1fa8c'","import styled from \"styled-components\";\nimport { Comment, Current_Line, Foreground, Selection } from \"../colours\";\n\nexport const Card = styled.div`\n  border-radius: 10px;\n  background-color ${Foreground};\n  padding: 16px;\n  *, &{\n    font-size: 32px;\n    color: ${Comment};\n    font-weight: bolder;\n  }\n`","import styled from \"styled-components\";\nimport { Comment as C, Current_Line, Foreground, Orange, Pink, Purple, Red } from \"../colours\";\n\nexport const Emph = styled.span`\n  color: ${Current_Line};\n  text-shadow: 0 0 10px ${Purple};\n`;","\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Current_Line, Foreground, Selection } from '../colours';\n\nexport const Header = () => (\n  <HeaderBox>\n    <HeaderBar>\n      <Title>Anton Ego</Title>\n    </HeaderBar>\n  </HeaderBox>\n)\n\nconst Title = styled.h1`\n  color: ${Foreground};\n  font-size: 50px;\n  margin: 0;\n  margin-bottom: 16px;\n`\n\nconst HeaderBox = styled.div`\n  display: flex;\n  flex-grox: 1;\n  width: 100%;\n`\nconst HeaderBar = styled.div`\n  padding-left: 32px;\n  background-color: ${Current_Line};\n  width: 100%;\n`","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Card } from \"./Card\";\n\nexport type ReviewProps = {\n  imageUrl: string,\n  reviewContent: JSX.Element;\n}\n\nexport const Review: React.FC<ReviewProps> = ({imageUrl, reviewContent}) => {\n  const ReviewContainer = styled.div`\n    width: 100%;\n    display: flex;\n    column-gap: 32px;\n    \n    @media (max-width: 500px) {\n      flex-direction: column;\n      width: 90%;\n      row-gap: 32px;\n    }\n  `;\n\n  const FoodImage = styled.img`\n    width: 100%;\n    height: 100%;\n  `;\n\n  const FoodCard = styled(Card)`\n    width: 30%;\n\n    @media (max-width: 500px) {\n      width: 100%;\n    }\n  `\n\n  const ReviewCard = styled(Card)`\n    width: 70%;\n\n    @media (max-width: 500px) {\n      width: 100%;\n    }\n  `\n  \n  return (\n    <ReviewContainer>\n      <FoodCard>\n        <FoodImage src={imageUrl}/>\n      </FoodCard>\n      <ReviewCard>\n        {reviewContent}\n      </ReviewCard>\n        \n    </ReviewContainer>\n  )\n}","import React, { ChangeEvent, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Current_Line, Foreground, Purple, Red, Yellow } from \"../colours\";\n\nexport type SubmitButtonProps = {\n  setImageUrl: (url: string) => void;\n}\n\nexport const SubmitButton: React.FC<SubmitButtonProps> = ({setImageUrl}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const StyledButton = styled.button`\n    height: calc(100% + 32px);\n    width: calc(100% + 32px);\n    margin: -16px;\n    vertical-align: top;\n    background-color: ${Foreground};\n    border-radius: 10px;\n    border-color: ${Current_Line};\n    border-width: 6px;\n    box-shadow: none;\n    text-decoration: none;\n  `;\n\n  const handleClick = () => {\n    if (inputRef.current) {\n      inputRef.current.click();\n    }\n  }\n\n  const onImageChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      setImageUrl(URL.createObjectURL(event.target.files[0]));\n    }\n  }\n\n  return (\n    <>\n      <input ref={inputRef} type=\"file\" hidden onChange={onImageChange}/>\n      <StyledButton onClick={() => handleClick()}>I await your dish...</StyledButton>\n    </>\n  )\n}","export default __webpack_public_path__ + \"static/media/Ego.cdfd12cf.webp\";","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Background } from './colours';\nimport { Card } from './components/Card';\nimport { Emph } from './components/Emph';\nimport { Header } from './components/Header';\nimport { Review } from './components/Review';\nimport { SubmitButton } from './components/SubmitButton';\nimport Ego from './images/Ego.webp';\n\nfunction App() {\n  const [imageUrl, setImageUrl] = useState<null | string>(null);\n\n  return (\n  <>\n    <Header/>\n    <Wrapper>\n      <Body>\n        <Card>\n          After reading a lot of <Emph>overheated puffery </Emph> about your new cook, you know what I'm craving? A little <Emph>perspective</Emph>. That's it. I'd like some <Emph>fresh</Emph>, <Emph>clear</Emph>, <Emph>well-seasoned perspective</Emph>.\n        </Card>\n        {!imageUrl && <Card>\n          <SubmitButton setImageUrl={setImageUrl}/>\n        </Card>}\n        {imageUrl && <Review imageUrl={imageUrl} reviewContent={<span>yum yum in my tum tum</span>}/>}\n      </Body>  \n      <EgoImage src={Ego} alt={\"Anton Ego\"} />\n    </Wrapper>\n  </>\n  );\n}\n\nexport default App;\n\nconst Wrapper = styled.div`\n  padding-top: 40px;\n  margin-left: 50px;\n  display: flex;\n  height: 100%;\n  justify-content: space-between;\n  overflow-x: hidden;\n`;\n\nconst Body = styled.div`\n  width: 80% !important;\n  min-width: 200px;\n  display: flex;\n  flex-direction: column;\n  row-gap: 32px;\n  align-content: center;\n`;\n\nconst EgoImage = styled.img`\n  height: 85vh;\n  position: fixed;\n\n  @media (min-width: 400px) {\n    right: -100px;\n  }\n\n\n  @media (max-width: 400px) {\n    right: -100px;\n  }\n\n  @media (min-width: 600px) {\n    right: -60px;\n  }\n\n  @media (min-width: 800px) {\n    right: -20px;\n  }\n\n  @media (min-width: 1000px) {\n    right: 32px;\n  }\n  \n`;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}